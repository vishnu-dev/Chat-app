<link type="text/css" rel="stylesheet" href="css/materialize.min.css"  media="screen,projection"/>    

<div class="centered" id="preloader" style="position:absolute">
<center>
  <img src="images/loading.gif">
</center>
</div>

<div class="row" id="showdiv" style="display:none">
  <div class="col s12">
    <ul class="tabs">
      <li class="tab col s4"><a class="active" href="#tab1">Chat</a></li>
      <li class="tab col s4"><a href="#tab2">Online Users</a></li>
      <li class="tab col s4"><a href="#tab3">Profile</a></li>
    </ul>
  </div>
  <div id="tab1" class="col s12">
    <div class="chat">
      {{!-- <div class="chat-header clearfix">
        <img src="images/vd1.png" alt="avatar" />
        
        <div class="chat-about">
          <div class="chat-with"> {{user.username}}</div>
          <span>Already <span class="chat-num-messages"></span> messages</span>
        </div>
        <a href="/logout"><button class="exit-btn">Logout</button></a>
      </div> --}}
      
      <div class="chat-history">
        <ul id="messagelist">
          <li class="clearfix messageitem">
            <div class="message-data align-left">
              <span class="message-data-time" ></span> &nbsp; &nbsp;
              <span class="message-data-name" >Vishnudev</span> <i class="fa fa-circle my"></i>
            </div>
            <div class="message other-message float-left">Hi</div>
          </li> 
          {{#each messages}}
          <li class="clearfix messageitem">
            <div class="message-data align-left">
              <span class="message-data-time" >{{this.msg.time}}</span> &nbsp; &nbsp;
              <span class="message-data-name" >{{this.msg.username}}</span> <i class="fa fa-circle" style="color:{{this.msg.color}}"></i>
            </div>
            <div class="message other-message float-left" style="background-color:{{this.msg.color}}">
              {{this.msg.msg}}
            </div>
          </li> 
          {{/each}}       
        </ul>
        <span><a target="_blank" id="img_href">
          <img class="img-chat" id="up_image">
        </a></span>
        <span style="float:right"><a href="/logout" class="btn-floating btn-small waves-effect waves-light red"><i class="fa fa-sign-out" aria-hidden="true"></i>
      </a></span>
        <ul>
          <li>
  {{!--             <div class="message-data">
              <span class="message-data-name"><i class="fa fa-circle online"></i> {{user.username}}</span>
              <span class="message-data-time">10:31 AM, Today</span>
            </div> --}}
            <div id="typing_anim" style="display:none">
              <i class="fa fa-circle online"></i>
              <i class="fa fa-circle online" style="color: #AED2A6"></i>
              <i class="fa fa-circle online" style="color:#DAE9DA"></i><span id="typing-user"></span><span>Typing....</span>
            </div>
          </li>
        </ul>
        
      </div> <!-- end chat-history -->
      <div class="chat-message clearfix">
      <form action="">
        <textarea name="message-to-send" maxlength="1024" class="typing-message" id="m" name="msg" placeholder ="Type your message" rows="3" required="true"></textarea><span><button id="mybtn">Send</button></span><br>
  {{!--         <i class="fa fa-file-o"></i> &nbsp;&nbsp;&nbsp;--}}
        <i class="fa fa-file-image-o"></i>{{!-- <input type="file" id="siofu_input"/> --}}
        <div id="file_drop" dropzone="copy" title="drop files for upload">drop file here</div>
      </form>
      
      </div> <!-- end chat-message -->
      
    </div> <!-- end chat -->
  </div>
  <div id="tab2" class="box">
    <div class="people-list" id="people-list">
      <ul class="list" id="users-online">
      </ul>
    </div>
  </div>  
  <div id="tab3">
    <div class="container-profile">
      <div class="wrap-profile">
        <h1>Change your avatar</h1>
        <div class="profile">
          <div class="profile__options">
             <label for="upload" onkeydown="handleAriaUpload(event, this)" id="upload_label" title="Upload New File" tabindex="2" class="aria-upload">upload new</label>
            <a class="last-btn btn" tabindex="2" onclick="changeAvatar('last')"
            onkeyup="if(event.keyCode !== 13) return;changeAvatar('last');">
              &larr;
            </a>

            <a class="next-btn btn" tabindex="3" onclick="changeAvatar('next')" onkeyup="if(event.keyCode !== 13) return;changeAvatar('next');">
              &rarr;
            </a>
          </div>
          <div class="avatar" id="avatar">
            <div id="preview"><img src="https://source.unsplash.com/h13Y8vyIXNU/150x150" id="avatar-image" class="avatar_img" id="">
            </div>
            <div class="avatar_upload" >
              <label class="upload_label">Upload
                <input type="file" id="upload">
              </label>
            </div>
          </div>
          <div class="nickname">
            <span id="name" tabindex="4" data-key="1" contenteditable="true" onkeyup="changeAvatarName(event, this.dataset.key, this.textContent)" onblur="changeAvatarName('blur', this.dataset.key, this.textContent)">Walrus</span>
          </div>
        </div>
      </div>
    </div>
  </div>            
</div>

<script src="js/socket.js"></script>
<script src="/siofu/client.js"></script>

<script>

// $(window).load(function(){
//   $('#showdiv').show();
//   $('#preloader').fadeOut('slow',function(){$(this).remove();});
// });
$(window).load(function(){
   // PAGE IS FULLY LOADED  
   // FADE OUT YOUR OVERLAYING DIV
   $('#preloader').fadeOut(2000);
   $('#showdiv').fadeIn();
   $('.chat-history').animate({scrollTop: $('.chat-history')[0].scrollHeight},0);
});
var socket = io();
socket.emit('login',{userId:"{{user.username}}"});
$(function () {
  $('#mybtn').click(function(){ 
    var d = new Date();
    d = d.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true});
    var username = "{{user.username}}";
    var color = "{{user.color}}";
    socket.emit('chat message', {msg:$('#m').val(),time:d,username:username,color:color});
    $('#m').val('');
    // var num = document.getElementsByClassName("chat-num-messages")[0];
    // var oldnum = num.innerHTML;
    // var newnum = parseInt(oldnum)+1;
    // num.innerHTML=newnum;
    return false;
  });
  socket.on('new message', function(msg){
    var itm = document.getElementsByClassName('messageitem')[0];
    var cln = itm.cloneNode(true);
    var list = document.getElementById('messagelist');
    list.appendChild(cln);
    var message = document.getElementsByClassName('other-message');
    message[message.length-1].innerHTML=msg.msg;
    message[message.length-1].style.backgroundColor=msg.color;
    var my = document.getElementsByClassName('my');
    my[my.length-1].style.color=msg.color;      
    var arrow = document.getElementsByClassName('my');
    arrow[arrow.length-1].style.color=msg.color;
    var time = document.getElementsByClassName('message-data-time');
    time[time.length-1].innerHTML=msg.time;
    var username = document.getElementsByClassName('message-data-name');
    username[username.length-1].innerHTML=msg.username;
    alignmsg();
    $('.chat-history').animate({scrollTop: $('.chat-history')[0].scrollHeight});
  });

  socket.on('online users', function (users) {
    var ul = document.getElementById("users-online");
    for (var i = 0; i < users.length; i++) {
        var li = document.createElement("li");  
        li.setAttribute("id",users[i].socket);    
        li.setAttribute("class","users");
        li.appendChild(document.createTextNode(users[i].username));
        ul.appendChild(li);  
    }
    var seen = {};
    $('#users-online li').each(function() {
        var txt = $(this).text();
        if (seen[txt])
            $(this).remove();
        else
            seen[txt] = true;
        //return false;
    }
    );
  });

  socket.on('user disconnected',function(user) {
    console.log(user);
    function removeElement(element) {
        element && element.parentNode && element.parentNode.removeChild(element);
    }
    removeElement( document.getElementById(user) );
  });
});
var timeout;

function timeoutFunction() {
    typing = false;
    socket.emit("typing", false);
}

$('.typing-message').keyup(function() {
    typing = true;
    socket.emit('typing',{user:"{{user.username}}"});
    clearTimeout(timeout);
    timeout = setTimeout(timeoutFunction, 1000);
});

socket.on('typing', function(data) {
  var typing_anim = document.getElementById('typing_anim');
  var typing_user = document.getElementById('typing-user');
    if (data) {
        typing_anim.style.display="block";
        typing_user.innerHTML=" "+data.user+" ";
    } else {
        typing_anim.style.display="none";
    }
});
// var i=0;
// {{#each messages}}
// i++;
// {{/each}}
// document.getElementsByClassName('chat-num-messages')[0].innerHTML=i;
var uploader = new SocketIOFileUpload(socket);
console.log(uploader);
//uploader.listenOnInput(document.getElementById("siofu_input"));
uploader.listenOnDrop(document.getElementById("file_drop"));
socket.on('uploaded', function(name) {
  document.getElementById('up_image').src=name;
  document.getElementById('img_href').href=name;
});

function alignmsg() {
  var msgname = document.getElementsByClassName('message-data-name');
  for (var i = 0; i < msgname.length; i++) {
    var name = msgname[i].innerHTML;
    if(name=="{{user.username}}"){
      $(".message:eq("+i+")").removeClass("float-left");
      $(".message:eq("+i+")").addClass("float-right");
      $(".message-data:eq("+i+")").removeClass("align-left");
      $(".message-data:eq("+i+")").addClass("align-right");
    }
  }
}
alignmsg();
</script>

<script type="text/javascript">
var upload = document.getElementById("upload");
var preview = document.getElementById("preview");
var avatar = document.getElementById("avatar");
var avatar_name = document.getElementById("name");
var avatar_name_change_box =
document.getElementById("change-name-box");

var avatars = {
  srcList: [
    {
      name: "Cosmos",
      src: encodeURIComponent("https://source.unsplash.com/rTZW4f02zY8/150x150")
    },
    {
      name: "Walrus",
      src: encodeURIComponent("https://source.unsplash.com/h13Y8vyIXNU/150x150")
    },
     {
      name: "Flowers",
      src: encodeURIComponent("https://source.unsplash.com/PwWkzeJeJZE/150x150")
    },
    {
      name: "Dog",
      src: encodeURIComponent("https://source.unsplash.com/oCJuJQqvCzc/150x150")
    }
  ],
  activeKey: 1,
  add: function(_name, _src){
    this.activeKey = this.srcList.length;
    return (this.srcList.push({name: _name, src: encodeURIComponent(_src)}) - 1);
  },
  changeName: function(key, _name) {
    
    if ( !Number.isInteger(key) ) {
      return false;
    }
    this.srcList[key].name = _name;
    if ( avatar_name.dataset.key == key)
    {
      avatar_name.textContent = _name;  
    }
    return _name;
  },
  showNext: function(){
    
    var _next = this.activeKey + 1;
    if ( _next >= this.srcList.length ) {
      _next = 0;
    }
    this.showByKey(_next);
    
  },
  showLast: function(){
    var _next = this.activeKey - 1;
    if ( _next < 0 ) {
      _next = this.srcList.length - 1;
    }
    this.showByKey(_next);
  },
  showByKey: function(_next) {
    var _on = this.srcList[_next];
    if ( !_on.name ) return;
    
    while(preview.firstChild) {
      preview.removeChild(preview.firstChild);
    }
    
    var img = document.createElement("img");
    img.src = decodeURIComponent(_on.src);
    img.className = "avatar_img--loading";
    img.onload = function() {
      img.classList.add("avatar_img");
    }
    avatar_name.textContent = _on.name;
    avatar_name.setAttribute("data-key", _next);
    preview.appendChild(img);
    this.activeKey = _next;
  }
};

function showAvatar(key) {
  if ( !key ) {
    key = avatars.activeKey;
  }
  
}

/*

/** Handle uploading of files */
upload.addEventListener("change", handleFiles, false);
function handleFiles() {
  var files = this.files;
  for (var i = 0; i < files.length; i++) {
    var file = files[i];
    var imageType = /^image\//;
    
    if (!imageType.test(file.type)) {
      avatar.classList.add("avatar--upload-error");
      setTimeout(function(){
        avatar.classList.remove("avatar--upload-error");
      },1200);
      continue;
    }
    
    avatar.classList.remove("avatar--upload-error");
    
    while(preview.firstChild) {
      preview.removeChild(preview.firstChild);
    }
    
    var img = document.createElement("img");
    img.file = file;
    img.src = window.URL.createObjectURL(file);
    img.onload = function() {
      // window.URL.revokeObjectURL(this.src);
    }
    img.className ="avatar_img";
    
    /* Clear focus and any text editing mode */
    document.activeElement.blur();
    window.getSelection().removeAllRanges();
    
    var _avatarKey = avatars.add(file.name, img.src);
    avatar_name.textContent = file.name;
    avatar_name.setAttribute("data-key", _avatarKey);
    preview.appendChild(img);
  }
}

/** Inline functions */
window.changeAvatarName = function(event, key, name) {
  if (event.keyCode != 13 && event != 'blur') return;
  key = parseInt(key);
  if ( !name ) return;
  var change = avatars.changeName(key, name);
  document.activeElement.blur();
  // remove selection abilities
  window.getSelection().removeAllRanges();
    
};

window.changeAvatar = function(dir){
  if ( dir === 'next' ) {
    avatars.showNext();
  }
  else {
    avatars.showLast();
  }
};
window.handleAriaUpload = function(e, obj) {
  if(e.keyCode == 13) {
    obj.click();
  }
};

</script>